
type Person {
  UUID: UUID!
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  nationality: String!
  birthday: String!
  employers: [Company!]!
}

type Query {
  allPersons: [Person]!
  person(input: PersonInput!): Person!
}

input PersonInput {
  UUID: UUID!
}

type Mutation {
  addPerson(input: AddPersonInput!): AddPersonOutput!
  editPerson(input: EditPersonInput!): EditPersonOutput!
}

input AddPersonPersonInput {
  firstName: String! 
  lastName: String!  
  phone: PhoneNumber 
  email: EmailAddress!
  birthday: DateTime! 
  nationality: CountryCode!
  personalIdentityCode: PersonalIdentityCode! 
}

input AddPersonInput {
  person: AddPersonPersonInput!
}

type AddPersonOutput {
  person: Person! 
}

input EditPersonInput {
  UUID: UUID!
  person: AddPersonPersonInput!
}


type EditPersonOutput {
  person: Person!
}
