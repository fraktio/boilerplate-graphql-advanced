name: CI
on: [push]

jobs:
  version:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - name: Git config name
        run: git config --global user.name 'Boilerplate'
      - name: Git config name
        run: git config --global user.email 'boilerplate@fraktio.fi'
      - name: Patch
        run: npm version patch --no-git-tag-version
      - name: Commit
        run: git commit -a -m "bump version"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  ci:
    runs-on: ubuntu-latest
    container: node:15

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: graphql-boilerplate-ci
          POSTGRES_USER: graphql-boilerplate-ci
          POSTGRES_DB: graphql-boilerplate-ci
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v1

    - name: Install dependencies
      run: npm ci

    - name: Generate codegen
      run: npm run codegen
    
    - name: Typecheck
      run: npm run typescript-check --noEmit
    
    - name: Lint
      run: npm run lint

    - name: Schema validation
      run: npm run validate-schema
    
    - name: Database Migration Latest
      run: npm run database:migrate:latest
      env:
        DATABASE_TYPE: pg
        DATABASE_HOST: postgres
        DATABASE_USER: graphql-boilerplate-ci
        DATABASE_PORT: 5432
        DATABASE_PASSWORD: graphql-boilerplate-ci
        DATABASE_DATABASE_NAME: graphql-boilerplate-ci

    - name: Database Seed
      run: npm run seed
      env:
        DATABASE_TYPE: pg
        DATABASE_HOST: postgres
        DATABASE_USER: graphql-boilerplate-ci
        DATABASE_PORT: 5432
        DATABASE_PASSWORD: graphql-boilerplate-ci
        DATABASE_DATABASE_NAME: graphql-boilerplate-ci

    - name: Database Migration Rollback
      run: npm run database:migrate:rollback
      env:
        DATABASE_TYPE: pg
        DATABASE_HOST: postgres
        DATABASE_USER: graphql-boilerplate-ci
        DATABASE_PORT: 5432
        DATABASE_PASSWORD: graphql-boilerplate-ci
        DATABASE_DATABASE_NAME: graphql-boilerplate-ci


    - name: Tests
      run: npm run test
      env:
        DATABASE_USER: graphql-boilerplate-ci
        DATABASE_PORT: 5432
        DATABASE_HOST: postgres
        DATABASE_PASSWORD: graphql-boilerplate-ci
        DATABASE_DATABASE_NAME: graphql-boilerplate-ci

    - name: Check for non generated files
      run: git diff --exit-code

    - name: Check serverless package (correct packages in dependency list)
      run: npm run build:serverless
